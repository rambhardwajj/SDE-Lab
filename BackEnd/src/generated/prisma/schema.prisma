// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model Session {
  id           String    @id @default(uuid())
  refreshToken String
  userId       String
  user         User      @relation(fields: [userId], references: [id])
  userAgent    String?
  ipAddress    String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  expiresAt    DateTime?
}

model User {
  id       String  @id @default(uuid())
  userName String  @unique
  email    String  @unique
  password String
  fullName String?
  role     Role    @default(USER)

  avatarUrl       String? // Optional
  avatarLocalPath String? // remove 

  isEmailVerified Boolean @default(false)

  emailVerificationToken  String?
  emailVerificationExpiry DateTime?
  resetPasswordToken      String?
  resetPasswordExpiry     DateTime?

  sessions Session[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Problem   Problem[]
}

model Problem {
  id              String     @id @default(uuid())
  title           String     @unique
  difficulty      Difficulty
  tags            String[]
  companies       String?
  hints           String[]
  description     String
  examples        Json
  constraints     String[]
  followUp        String?
  editorial       Json?
  createdByUserId String

  codeSnippets       Json[]
  testcases          Json[]
  referenceSolutions Json[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Realtionship
  user User @relation(fields: [createdByUserId], references: [id])
}

model Submissions {
  id            String   @id @default(uuid())
  userId        String
  problemId     String
  submittedCode Json
  language      String
  status        String
  createdAt     DateTime @default(now())
}
